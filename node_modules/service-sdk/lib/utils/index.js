"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const axios_1 = __importDefault(require("axios"));
class RequestService {
    constructor() {
        this.get = (url, clientId, csrftoken = undefined, contentType = "application/json") => {
            return createRequest("GET", url, null, clientId, csrftoken, contentType);
        };
        this.post = (url, body, clientId, csrftoken = undefined, contentType = "application/json") => {
            return createRequest("POST", url, body, clientId, csrftoken, contentType);
        };
        this.put = (url, body, clientId, csrftoken = undefined, contentType = "application/json") => {
            return createRequest("PUT", url, body, clientId, csrftoken, contentType);
        };
        this.delete = (url, clientId, csrftoken = undefined, contentType = "application/json") => {
            return createRequest("DELETE", url, null, clientId, csrftoken, contentType);
        };
    }
}
const createRequest = (method, url, body, clientId, csrftoken, contentType) => {
    return (0, axios_1.default)({
        method: method,
        url: url,
        data: body,
        headers: setHeader(clientId, csrftoken, contentType),
    });
};
const setHeader = (clientId, csrftoken, contentType) => {
    //set clientId to header
    if (csrftoken) {
        axios_1.default.defaults.headers.common["X-CSRFToken"] = csrftoken;
    }
    else {
        delete axios_1.default.defaults.headers.common["X-CSRFToken"];
    }
    axios_1.default.defaults.headers.common["clientId"] = clientId;
    axios_1.default.defaults.headers.common["Content-Type"] = contentType;
};
exports.default = new RequestService();
